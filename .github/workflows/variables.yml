# Testing connectivity to private docker registry.
name: Testing variable setting.

# Adding [no ci] to the commit message tells Github Actions to ignore the push
env:
  SHA: ${{ format('{0}_{1}', 'sha', github.sha) }}

# Controls when the workflow will run
on:
  # Triggers the workflow on push request events but only for the "variables" branch
  # and any branch under folder.
  push:
    branches: ["variables", "folder/**"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # Testing setting workflow wide env variables inside a job.
  set_variables:
    runs-on: ubuntu-latest

    outputs:
      W1: ${{ steps.workflow.outputs.WORKFLOW_ONE }}
      W2: ${{ steps.workflow.outputs.WORKFLOW_TWO }}
      J1: ${{ steps.job.outputs.JOB_ONE }}
      J2: ${{ steps.job.outputs.JOB_TWO }}
      VERSION: ${{ steps.job.outputs.version_num }}

    steps:
      - id: workflow
        run: |
          echo "WORKFLOW_ONE=1234" >> $GITHUB_OUTPUT
          echo "WORKFLOW_TWO=dave" >> $GITHUB_OUTPUT

      - id: job
        run: |
          echo "JOB_ONE=1234" >> $GITHUB_OUTPUT
          echo "JOB_TWO=dave" >> $GITHUB_OUTPUT
          version_num=${GITHUB_REF_NAME##*/}
          echo "version_num=${version_num}" >> $GITHUB_OUTPUT

  report_on_variables:
    runs-on: ubuntu-latest
    needs: set_variables

    env:
      WORKFLOW_ONE: ${{ needs.set_variables.outputs.W1 }}
      WORKFLOW_TWO: ${{ needs.set_variables.outputs.W2 }}
      JOB_ONE: ${{ needs.set_variables.outputs.J1 }}
      JOB_TWO: ${{ needs.set_variables.outputs.J2 }}
      VERSION: ${{ needs.set_variables.outputs.VERSION }}

    steps:
      - name: report variables
        run: |
          echo "Workflow one: "$WORKFLOW_ONE
          echo "workflow two: "$WORKFLOW_TWO
          echo "job one: "$JOB_ONE
          echo "job two: "$JOB_TWO
          echo "sha: ${SHA}"
          echo "github ref: "${{ github.ref_name }}
          echo "version: ${VERSION}"
